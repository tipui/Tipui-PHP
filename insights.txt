/**
*
* Update: 2014-03-29 19:09:00
*
* [insights]
 - Implementation of context for Core.
   documentation
   getmethoddatacache setmethoddatacache as deprecated
   Core -> env as deprecated
   Core::core_cached_data optimize
   [review] config from context (remove or not?)
 
 - http://dev-php.tipui.com/Docs/Builtin/Helpers/HTML/Form/SetNameAsArray (the post method)
 - Form::SetElement(), Form::SetURLParam() inside array wose index is the method defined in Form::SetMethod() or the defaults.
 - vendors (hashids, alphaid, phpmailer, swiftmailer)
 - Mail lib (swift / phpmailer)
 - DB lib (pdo / builtin)
 - Benchmark lib
 - canonical
	<link rel="canonical" href="http://alexcican.com/post/single-post">
	http://www.wordtracker.com/academy/seo-clean-urls
	anchor # ?

 - solution for display 404 or error page.
	ie: http://dev-php.tipui.com/pt/Docs/aaaa is not valid, but displays the contents of http://dev-php.tipui.com/pt/Docs
	One solution under current structure is checking is the found page is expecting parameters. If not, may display 404.
	Other solution is to have registered paths as the previous version, but implicates more limitations.
	[IMPORTANT]
	In some cases, the URL expecting parameters but received parameters in a not expected METHOD (GET, POST)
	Need to check from witch method the parameters came.

 - LANGUAGES_IN_FOLDER
 - Core::GetENV is public.. review to change to private.
 - review using realpath() to canonicalize the paths on everything that is using str_replace() for slashes compatibility
 - translations for notices and warning of builtin codes
 - Deny access to Core instance from not allowed scripts.
 - [x]Check if user cookies are enabled. If not enabled or fails, then use session.
 - Cookie data version. Will be useful for cases when cookie or session structures was modified.
 - input file support for name as array
 - Sanitize get data from customized array of parameters, instead of from Request library. (legacy ExternalData)
 - Optionaly defines array of names for SetNameAsArray in model Form() method
 - data rules files as class{}. See: \Tipui\Builtin\Libs\DataRules (this will eliminate the self checking for overriding)

 - js, css parser
 - cache of pre-compiled files
 - when entering with duplicated slashes, by default, loads not found module, but may be not so strict and remove the duplicated slashes:
   http://dev-php.tipui.com//Docs

 - Cache mode options set (Docs/Builtin/Libs/Cache) Cache->Cookie(time, time_mode...)->Set();
 - [optional] Module and Template file with same name of existing folder will search folder/index.php and folder/index.html respectivelly if files not exists in the indicated path.
 - Factory classes: Test instances performance.
 - sys_getloadavg php function implementation
*/